@page "/"
@using spa.Shared.Models
@inject HttpClient Http
@inject NavigationManager nav


<PageTitle>Calendar</PageTitle>
@if (Calendars.Count > 1)
{
    <div class="container">
        <div class="row">
            <img src="loading.gif">
        </div>
    </div>
}
else
{
    <div class=container>
        <div class="row">
            @foreach (var ce in CalendarEntries)
            {
                <div class="col-xs-12 col-md-6 col-lg-4">
                    <div class="card">
                        <button @onclick="@( e => Reveal(ce))">
                            <img class="card-img" src="@ce.imageUrl" alt="...">
                            <div class="card-img-overlay text-white d-flex justify-content-center align-items-end">
                                <h1>@ce.day.ToString()</h1>
                            </div>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {

    private List<CalendarEntry> CalendarEntries = new List<CalendarEntry>();

    private List<Calendar> Calendars = new List<Calendar>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Calendars = await Http.GetFromJsonAsync<List<Calendar>>("api/calendars");
            if (Calendars.Count > 0)
            {
                try
                {
                    CalendarEntries = await Http.GetFromJsonAsync<List<CalendarEntry>>(String.Format("api/calendars/{0}/entries",
                    Calendars.Last().id));
                    CalendarEntries = CalendarEntries.OrderBy(p => p.allowedDate).ToList();
                    foreach (var ce in CalendarEntries)
                    {
                        var u = await Http.GetStringAsync(String.Format("api/calendars/{0}/entries/{1}/default", Calendars.Last().id, ce.day));
                        Console.WriteLine(u);
                        ce.imageUrl = u;
                        StateHasChanged();
                    }
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
            }
            else
            {
            }
        }
        catch
        {
            nav.NavigateTo("/error");
        }


    }

    private async void Reveal(CalendarEntry e)
    {       
        var ce = await Http.GetStringAsync(String.Format("api/calendars/{0}/entries/{1}/reveal",
        Calendars.Last().id, e.day));
        e.imageUrl = ce;
        StateHasChanged();
    }


}